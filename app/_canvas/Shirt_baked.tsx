/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 .\\public\\shirt_baked.glb --types --transform
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { Decal, useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { state } from '../_state'
import { useSnapshot } from 'valtio'
import { useFrame } from '@react-three/fiber'
import { easing } from 'maath'

type GLTFResult = GLTF & {
  nodes: {
    T_Shirt_male: THREE.Mesh
  }
  materials: {
    lambert1: THREE.MeshStandardMaterial
  }
}
const shirtModelPath = '/shirt_baked.glb'

export default function TShirt(props: JSX.IntrinsicElements['group']) {
  const snap = useSnapshot(state);
  const fullTexture = useTexture(snap.fullTexture);
  const logoTexture = useTexture(snap.logoTexture);

  useFrame((state, delta) => {
    easing.dampC(materials.lambert1.color, snap.color, 0.25, delta)
  });

  const { nodes, materials, scene } = useGLTF(shirtModelPath) as GLTFResult
  return (
    <group key={JSON.stringify(snap)}>
      <mesh
        material-roughness={1}
        dispose={null}
        castShadow
        geometry={nodes.T_Shirt_male.geometry} material={materials.lambert1} scale={[1, 1, 1]} >

        {snap.isTextureShow && (
          <Decal
            position={[0, 0, 0]}
            rotation={[0, 0, 0]}
            scale={1}
            map={fullTexture}
          />
        )}

        {snap.isLogoShow && (
          <Decal
            position={[0, 0.04, 0.15]}
            rotation={[0, 0, 0]}
            scale={0.15}
            map={logoTexture}

            map-anisotropy={16}
            depthTest={false}
            depthWrite={true}
          />
        )}

      </mesh>

    </group>
  )
}
useGLTF.preload(shirtModelPath)
